def FindAllKmers(dna,k):
    kmers=[]
    for i in range(0,len(dna)-k+1):
        kmers.append(dna[i:(i+k)])
    return kmers
def Prefix(pattern):
    return pattern[:len(pattern)-1]
def SUffix(pattern):
    return pattern[1:len(pattern)]
def DeBrujiGraph(text,k):
    D=dict()
    for kmer in FindAllKmers(text,k):
        if Prefix(kmer) not in D.keys():
            D[Prefix(kmer)]=[SUffix(kmer)]
        else:
            if SUffix(kmer) not in D[Prefix(kmer)]:
                D[Prefix(kmer)].append(SUffix(kmer))
    return D
def Output(D):
    for key in D.keys():
        st=key+' -> '
        for i in range(len(D[key])):
            if i>0:
                st+=','+D[key][i]
            else:
                st+=D[key][i]
        print(st)
text='CCCGGGCGCAATTAAGACTGTTCGGGATTGAGTCTGGCACGCGTATTATGTATGTCCGGCGCCACCGGGGACCCTCATCGTACAGCACACTATGCCGTAGTACCTGCGACTGTTTTCCGGTCAGCATCCCAGAAGCTTAGGTATGAAACCCCACCCATTGGGTCATCTTCTCAATGAGGCCACCGACGTTTTGCCCGCTGTGCGCTGGACGAGAGGAGTCTGTTATGGCATGCATGGCTTTTTCCGTGACCCCTGAACTTAACCGCGGATCATTACAGGATGGTTAAGTGGCGTAAACCGCACAACCACTCCGGCGGTAGCATGAATGCCACTGCGGTATCGGGCGAGCAAAATATTAGTGGCCGCGTGCCGTCGGCGAACTCCATCTCGCCAATCGGAAAAGCCTGGGAAGATTGCCCAAGTCGTGCGTTCGTATAATTACTTATCGCAGTGATCGTTGGAAGCTTGTACCGTATAAGACCGCGAAATCAATTTGGTACGGTAACAGTATTTCTTACATACCGCAGACCTTGAGATTCTGCCCGACGCCCAAGCTACGGCAGGACTGGCCAAGTATGCGACCCATGAATAGATATGTCCGATACTAACAGCTCTGGACTTGCCATAAGGATCTCGCATTATAGTCACAGATTGGCGCTCGGGGAAGAAGCTTTGGCGCAGCCATGCATTATGTGATGTCCTCGTGACCCGCTGTTCCTAAGATTTTGCTATGAGCCACTGATAGATGGACCCACATCGGGGAGATTTCTCGCTACGTCCTGCGCGTGCGAGTGTCAGTGTTCCGGTAGCTAAGCAAATTCGACCTCGCCTCTCTGAATGATCGCATTCGTATGGCGCTTTGATAAATACTGCAACGTTTAATGATCTAGAAAGGGGGAATACTGCACTGAAAGAGATGTTGCTCCATAGTCATGATCTTGGGTATCATATTCCGTTTTCAAATTCGGAGCCTACTCAAAACGCAAGGGCACGGAGCTCACAGAGTGGCGGATAATTATTAGCATGAATCGTAGGCCACCCACAGCCTGTGTGTTCTATTACATTGGAGGTGGGACCTGGTTTGATACAAGCGTTCAGCTGCTACCACAGTTATCCAAGGTCAGTTTGACACGCGGCCGCTCGTCGCAAATATTTTCATAGCGTGGGCAGACTGTCCCAGGTATGTGCAGGGATGCCCGGGGTCGTTTGCCCACACTTCGCCGTAGAGGATATTGAACAGTGCAGGTTTTACTGACTTGGTAACTTACCAACTCCCGTAATGATATTGCGGGGTGCGCGTAGAAACCCACCTTTAATTAGTTCCACATGTCTGCCGACCCATTCCTGCGTAATATATCGCGATTCGGTTGCATCAATGAGCGAGGTTCCCACTAGCGAGTCGGCTATCCGCGGGCCCCTATCCCACCATGCGCCCTTTTCAGTATCCTCGGGGGTGCTCAGAGGTCTCGTAGTCACCGGTTGCTGCTAAGTGATCCCGCATTGCCGAGACGCTCGTCTGGCTACACCAGCAAACCAGCTCCACGCACGCCTACGGACACCTTGCAACAAGCATCAATGCTTGACTTTTTCTAAAGGTCCTTTTCTCAGCTTGTAACAGGTCCTGACAGTCAGTGTTAACTATATCGTAGTCCCGAAAAGAGTCATAATGGTACTACTCAGGCTTGGAAGGCCTTCCGTTTAAGCATAGGAGTGACTTCCGAGTATCCCCCCAAACGCTGTGGCCTCGCACTTTATTTTCTTAATCAATACGTCAGTATATTTGTGCTTATCTTGCATTCAGTTCAGGATACCGTACTCGTGGCCTTGACATATGAGCGGCCCTCTATTGAAGACGGGGTTGGAAGCTTCCGCTTACGACTGTAGCGAGTTATAGTCCGTGCACATGCCGAGCTGGGTCATAATAGTTTTGCCTTGTTCATCCACTAGGCAAACTTCACCAGGAATCTGCACTGCTAATAGTCCCTTATGATTTTCACAAT'
k=12
D=DeBrujiGraph(text,k)
Output(D)